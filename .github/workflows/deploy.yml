name: Deploy to Render

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://smart-voice-guard-frontend.onrender.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy Frontend
      run: |
        echo "Frontend deployed to: https://smart-voice-guard-frontend.onrender.com"
        echo "Backend API deployed to: https://smart-voice-guard-api.onrender.com"
        
    - name: Create GitHub Deployment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // Create deployment for frontend
          const frontendDeployment = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'production',
            description: 'Deploy to Render',
            auto_merge: false,
            required_contexts: []
          });
          
          // Mark frontend deployment as success
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: frontendDeployment.data.id,
            state: 'success',
            description: 'Successfully deployed to Render',
            environment_url: 'https://smart-voice-guard-frontend.onrender.com'
          });
          
          console.log('Deployment created and marked as successful');